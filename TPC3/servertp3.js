var http = require('http')
var fs = require('fs')
var url = require('url')
var axios = require ('axios')

function isEmptyArray(array) {
    return array.length === 0;
  }

function genrarFilme(filme) {
    pagHTML = `<!DOCTYPE html>
    <html>
      <head>
        <meta charset="utf-8" />
        <title>${filme.title}</title>
        <link rel="stylesheet" href="/w3.css" />
      </head>
      <body>
        <div class="w3-card-4">
          <header class="w3-container w3-blue">
          </header>
  
          <div class="w3-card-4">
            <header class="w3-container w3-red">
              <h1>Filme: ${filme.title}</h1>
            </header>
            <div class="w3-card-4 w3-dark-grey">
              <div class="w3-container w3-center">
                <h3>Titulo: ${filme.title}</h3>
                <br />
                <h3>Released Date: ${filme.year}</h3>
                <br />
                `
                filme.forEach(film => {
                    if (film.cast ) {
                        pagHTML += `
                            <h3> Cast : ${film.cast}
                        `;
                    } else {
                        console.error('Filme com dados ausentes:', film);
                    }
                });

                filme.forEach(film => {
                    if (film.genre ) {
                        pagHTML += `
                            <h3> Cast : ${film.cast}
                        `;
                    } else {
                        console.error('Filme com dados ausentes:', film);
                    }
                });
                `
               <h3>Cast: ${filme.cast}</h3>
                <br>
             <h3>Genero: ${filme.genero}</h3><br />
              </div>
            </div>
          </div>
        </div>
  
        <footer class="w3-container w3-blue">
          <h5>Generated by EngWeb2024</h5>
        </footer>
      </body>
    </html>
    `
    return pagHTML;
  }
function genrarFilmes(filmes){
    pagHTML = `<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title> Lista de Filmes </title>
            <link rel="stylesheet" href="/w3.css"/>
        </head>
        <body>
            <div class="w3-card-4">
    
                <header class="w3-container w3-blue">
                    <h1>Lista de Filmes</h1>
                </header>
                
                <table class="w3-table w3-striped">
                    <tr>
                        <th>Titulo do Filme</th>
                    </tr>
                    `
                    filmes.forEach(film => {
                        if (film.title && film.year ) {
                            pagHTML += `
                            <tr>
                                <td><a href='/filmes/${film.id}'>${film.title}</a></td>
                            </tr>
                            `;
                        } else {
                            console.error('Filme com dados ausentes:', film);
                        }
                    });
                   // <td>${film.year}</td> 
                  //  <td>${film.cast}</td>

    pagHTML += `
    </table>
            
            <footer class="w3-container w3-blue">
                <h5>Generated by EngWeb2024</h5>
            </footer>
            
        </div> 
    </body>
</html>
    `
    return pagHTML
}

http.createServer(function (req, res) {
    var regex = /^\/filmes\/[a-z0-9]{24}$/;
    var q = url.parse(req.url, true);

    if (q.pathname === '/') {
        fs.readFile('principal.html', function (erro, dados) {
            if (erro) {
                res.writeHead(500, {'Content-Type': 'text/plain'});
                res.end('Erro interno do servidor ao ler principal.html.');
            } else {
                res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
                res.write(dados);
                res.end();
            }
        });
    } 
    
    else if (q.pathname == '/filmes') {
        axios.get('http://localhost:3000/filmes')
            .then(function (resp) {
                dados = resp.data;
                pagHTML = genrarFilmes(dados);
                res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
                res.write(pagHTML);
                res.end();
            })
            .catch(function(erro){
                res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
                res.write("<pre>" + erro + "</pre>")
                res.end()
            })
    }

    else if(regex.test(q.pathname)){

    axios.get('http://localhost:3000' + q.pathname)
    .then( function(resp){
        dados = resp.data
        pagHTML1 = genrarFilme(dados)
        res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'})
        res.write(pagHTML1)
        res.end()
    })
    .catch(function(erro){
        res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
        res.write("<pre>" + erro + "</pre>")
        res.end()
    })
    }
    

else if (q.pathname == '/w3.css'){
    fs.readFile('w3.css', function(erro, dados){
        if (erro) {
            res.writeHead(500, {'Content-Type': 'text/plain'});
            console.log('Erro interno do servidor ao ler w3.css.');
        } else {
            res.writeHead(200, {'Content-Type': 'text/css'});
            res.write(dados);
            res.end();
        }
    });
}
    



    else {
        res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'});
        res.write('<p>Erro: pedido n√£o suportado.</p>');
        res.write('<pre>' + q.pathname + '</pre>');
        res.end();
    }

    console.log(q.pathname);
}).listen(7777);